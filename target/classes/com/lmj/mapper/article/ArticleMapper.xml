<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.lmj.mapper.article.ArticleMapper">

    <!--保存文章-->
    <insert id="saveArticle" parameterType="com.lmj.model.Article">
--     private String title;//文章标题
--     private String keyWord;//关键字：Java，python，生活，感悟，
--     private  Integer isOriginal;//0.原创,1.非原创
--     private Integer createTime;//创建时间
--     private Integer updateTime;//更新时间
--     private String text;//正文
--     private Integer browseNums;//浏览量
--     private Integer uid ;//用户id
        insert into article(title,keyWord,isOriginal,createTime,updateTime,text,browseNums,uid)
        values(#{title},#{keyWord},#{isOriginal},#{createTime},#{updateTime},#{text},#{browseNums},#{uid})
    </insert>
    <select id="findAllArticleInfo" resultType="com.lmj.model.ArticleInfo">
        select u.username,a.title,a.isOriginal,a.keyWord,a.createTime,a.updateTime,a.browseNums,a.id from user as u,article as a where u.id=a.uid;
    </select>



    <!--pageHelper分页-->
    <!--查询所有用户的所有文章-->
    <select id="findArticleInfoPage" resultType="com.lmj.model.ArticleInfo">
        select u.username,a.title,a.isOriginal,a.keyWord,a.createTime,a.updateTime,a.browseNums,a.uid,a.id from user as u,article as a  where u.id=a.uid
    </select>
    <!--总记录数-->
    <select id="countItem" resultType="java.lang.Integer" >
        select count(*) from user,article where user.id=article.uid
    </select>
    <!--根据uid查找用户-->
    <select id="findUserByUid" parameterType="java.lang.Integer" resultType="com.lmj.model.User">
        select u.username,u.userSign,u.headPhoto,u.articleNums from user as u where u.id=#{uid}
    </select>
    <!--查询用户的所有文章-->
    <select id="findUserAllArticleByUid" parameterType="java.lang.Integer" resultType="com.lmj.model.Article">
        select a.title,a.isOriginal,a.keyWord,a.createTime,a.updateTime,a.browseNums,a.id from article as a where uid=#{uid}
    </select>
    <!--统计用户所有文章数-->
    <select id="userAllArticleCountItme" parameterType="java.lang.Integer" resultType="java.lang.Integer">
        select count(*) from article where uid=#{uid}
    </select>
    <!--根据文章标题查看文章详情-->
    <select id="findArticleInfoByTitle" parameterType="java.lang.String" resultType="com.lmj.model.ArticleInfo">
        select a.title,a.keyWord,a.isOriginal,a.updateTime,a.browseNums,a.text,a.uid,a.id from article as a where a.title=#{title}
    </select>
    <!--//更新文章访问量-->
    <update id="updateArticleBrowseNumsByTitle" parameterType="java.lang.String" >
        update article set browseNums = browseNums +1 where title = #{title}
    </update>
    <!--根据文章标题查找文章标题是否存在-->
    <select id="findisExistTitleByTitle" parameterType="java.lang.String" resultType="java.lang.String">
        select title from article where title = #{title}
    </select>

    <!--首页搜索文章列表功能-->
    <select id="findIndexAllArticle"  resultType="com.lmj.model.ArticleInfo">
       select u.username,a.title,a.isOriginal,a.keyWord,a.createTime,a.updateTime,a.browseNums,a.uid,a.id from user as u,article as a
        where u.id=a.uid
           <if test="username!='all'">
                and u.username=#{username}
           </if>
           <if test="keyWord!='all'">
               and a.keyWord=#{keyWord}
           </if>
           <if test="title!='all'">
               and a.title=#{title}
           </if>
           <if test="isOriginal!=3">
               and a.isOriginal=#{isOriginal}
           </if>


    </select>
    <!--//首页搜索文章总记录数-->
  <select id="indexCountItem" resultType="java.lang.Integer">
      select count(*) from user as u,article as a
     where u.id=a.uid
          <if test="username!='all'">
              and u.username=#{username}
          </if>
          <if test="keyWord!='all'">
              and a.keyWord=#{keyWord}
          </if>
          <if test="title!='all'">
              and a.title=#{title}
          </if>
          <if test="isOriginal!=3">
              and a.isOriginal=#{isOriginal}
          </if>
  </select>
    <!--根据文章标题删除文章-->
    <delete id="delArticleByTitle">
        delete from article where title=#{title}
    </delete>
    <!--//根据文章标题修改文章-->
    <!--Article findArticleByTitle(@Param("title")String title);-->
    <select id="findArticleById"  resultType="com.lmj.model.Article">
        select a.title,a.keyWord,a.isOriginal,a.text,a.id from  article as a where a.id=#{id}
    </select>
    <!--//根据文章标题更新更新时间-->
    <!--void updateUpdateTime(@Param("updateTime")Long updateTime,@Param("title")String title);-->
    <update id="updateUpdateArticleById" >
        update article set updateTime = #{updateTime},title=#{title},keyWord=#{keyWord},isOriginal=#{isOriginal},text=#{text} where id = #{id}
    </update>
 </mapper>
